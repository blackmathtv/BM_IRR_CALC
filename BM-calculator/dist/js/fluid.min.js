/*! blackmath-calculator v1.0.0 | (c) 2020  | ISC License | git+https://github.com/madhat5/BM-calculator.git */
var path,springs,values={friction:.8,timeStep:.01,amount:15,mass:2,count:0};values.invMass=1/values.mass;var size=view.size*[1.2,1],Spring=function(t,e,i,s){this.a=t,this.b=e,this.restLength=s||80,this.strength=i||.55,this.mamb=values.invMass*values.invMass};function createPath(t){var e=new Path({fillColor:"black"});springs=[];for(var i=0;i<=values.amount;i++){var s=e.add(new Point(i/values.amount,.5)*size),a=s.point;if(0!=i&&i!=values.amount||(a.y+=size.height),a.px=a.x,a.py=a.y,a.fixed=i<2||i>values.amount-2,i>0){var n=new Spring(s.previous.point,a,t);springs.push(n)}}return e.position.x-=size.width/4,e}function onResize(){path&&path.remove(),size=view.bounds.size*[2,1],path=createPath(.1)}function onMouseMove(t){var e=path.getNearestLocation(t.point),i=e.segment,s=i.point;if(!s.fixed&&e.distance<size.height/4){var a=t.point.y;if(s.y+=(a-s.y)/6,i.previous&&!i.previous.fixed){var n=i.previous.point;n.y+=(a-n.y)/24}if(i.next&&!i.next.fixed){var o=i.next.point;o.y+=(a-o.y)/24}}}function onFrame(t){updateWave(path)}function updateWave(t){for(var e=1-values.friction*values.timeStep*values.timeStep,i=0,s=t.segments.length;i<s;i++){var a=t.segments[i].point,n=(a.y-a.py)*e;a.py=a.y,a.y=Math.max(a.y+n,0)}var o=0;for(s=springs.length;o<s;o++)springs[o].update();t.smooth({type:"continuous"})}function onKeyDown(t){"space"==t.key&&(path.fullySelected=!path.fullySelected,path.fillColor=path.fullySelected?null:"black")}Spring.prototype.update=function(){var t=this.b-this.a,e=t.length,i=(e-this.restLength)/(e*this.mamb)*this.strength;t.y*=i*values.invMass*.2,this.a.fixed||(this.a.y+=t.y),this.b.fixed||(this.b.y-=t.y)};